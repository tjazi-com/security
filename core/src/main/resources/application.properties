##### server configuration

# TCP port
server.port = 9010

##### Database configuration
##### as per: http://blog.netgloo.com/2014/10/27/using-mysql-in-spring-boot-via-spring-data-jpa-and-hibernate/

# DataSource settings: set here your own configurations for the database
# connection.
spring.datasource.url = jdbc:mysql://localhost:3306/SecurityStore
spring.datasource.username = root
spring.datasource.password = passwd

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy for columns and tables; using DefaultNamingStrategy fixes problem
# with annotations on models being ignored
# spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.DefaultNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database.
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect